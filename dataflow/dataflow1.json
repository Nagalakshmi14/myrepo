{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_error",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_emp_error",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_emp_gudrows",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeNO as integer,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as string,",
				"          HIREDATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          EmployeeNO,",
				"          ENAME,",
				"          HIREDATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 split(isNull(toDate(HIREDATE, 'yyyy-MMM-dd')),",
				"     disjoint: false) ~> split1@(ErrorRows, GoodRows)",
				"split1@ErrorRows derive(HIREDATE = toDate(HIREDATE, 'yyyy-MMM-dd'),",
				"          filename = 'Handle Error Rows_emp.txt') ~> derivedColumn1",
				"split1@GoodRows derive(HIREDATE = toDate(HIREDATE, 'yyyy-MMM-dd'),",
				"          filename = 'Handle Error Rows_emp.txt') ~> derivedColumn2",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeNO as integer,",
				"          ENAME as string,",
				"          HIREDATE as date,",
				"          filename as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          EmployeeNO,",
				"          ENAME,",
				"          HIREDATE,",
				"          filename",
				"     )) ~> sink1",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeNO as integer,",
				"          ENAME as string,",
				"          HIREDATE as date,",
				"          filename as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          EmployeeNO,",
				"          ENAME,",
				"          HIREDATE,",
				"          filename",
				"     )) ~> sink2"
			]
		}
	}
}